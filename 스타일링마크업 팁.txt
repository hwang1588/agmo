-큰 숫자부터 순서대로 css에 기록해야 적용됨-

min-width: 1200px = 화면 넓이가 1200px 이상일때 적용되는 스타일
​
max-width: 1119px = 화면 넓이가 1119px 이하일떄 적용되는 스타일(기존)
​
max-width: 599px = 화면 넓이가 600px 이하일떄 적용되는 스타일(변경)

부트스트랩에서 col 단위는 ~까지는이다. (ex: col-lg-12= lg단위'까지는' 12)
========================================================
https://code.tutsplus.com/ko/tutorials/the-30-css-selectors-you-must-memorize--net-16048
(선택자 정리)
========================================================
@media (min-width: 1152px)
#가운데정렬 {
    max-width: 1080px;
    margin-left: auto;
    margin-right: auto;
}
좌우 여백 auto, 가운데 정렬
========================================================

//양끝 정렬
​
<div class="clearfix">//중간여백을 채우는 스프링
<div class="btn btn-dark float-start"></div>내용이 좌측에서 시작
<div class="btn btn-secondary float-end"></div>내용이 우측에서 시작
</div>
또는

<div class="row">//한줄 배치(12개 기준)
<div class="col-4></div> //왼쪽에 4만큼 배치
<div class="col-4 ms-auto></div>//오른쪽부터 4만큼 배치 나머지 마진은ms(margin-start)로 전부 여백으로 처리
</div>
========================================================
//내용 우측정렬
​
<div class="d-grid d-flex justify-content-end">
</div>
또는

<div class="row">
<div class="col-4 offset-8">//col-4 한개만 사용해서 '가상 오프셋 값'  col-8을 주고 왼쪽에 'col-8 가상여백' 을 만듦
</div>
</div>
========================================================
//상하좌우 가운데 자동정렬
​
<div class="mx-auto" style="width: 200px;">
 Centered element </div>
========================================================​
//row안의 col값 중 특정 col 안의 div내용을 위아래 가운데정렬 할때
​
<div class="col-1"></div>
<div class="col-10 align-self-center">
<span>위아래 가운데정렬</span>
</div>
<div class="col-1"></div>
========================================================
//애니메이션 키프레임 세트
​
.sample {
animation: samplecore(이름) 1s(재생시간) ease-in-out(재생시간동안 재생방법)
}

@keyframes samplecore{
 0% {내용} 
50% {내용} 
100% {내용}
 }
========================================================
//<abbr> 태그

별도의 툴팁을 제작하지 않고 마우스 오버로 툴팁을 바로 출력하게 함.
<abbr title="Cascading Style Sheets">CSS</abbr>​
========================================================
[jquery]
​
$(".class").addClass (class); ->선택자에 하나 이상의 클래스 이름을 추가합니다.
$(".class").removeClass (class); ->선택자에 하나 이상의 클래스 이름을 삭제합니다.
​
$("div").after ("<div>sample</div>"); ->선택한 블럭요소div의 닫기태그 뒤에 내용을 삽입합니다.
$("div").before ("<div>sample</div>"); ->선택한 블럭요소div의 시작태그 앞에 내용을 삽입합니다.
​
$("<div>sample</div>").appendto("p"); ->선택한 내용인div를 블럭요소 p의 닫기 태그 앞에 삽입합니다.
$"(<div>sample</div>).prependto("p"); ->선택한 내용인div를 블럭요소 p의 시작 태그 뒤에 삽입합니다.
​
$("div").wrapInner("<b></b>"); -> 선택한 블럭요소 div의 시작태그와 닫기태그에 <b>태그를 장착합니다.
​
$("div").html("Hello <b>world!</b>"); ->선택한 블럭요소div의 내용을 html text로 변경합니다.
$("div").replaceAll("p"); ->선택한 블럭요소div를 블럭요소p로 바꿉니다.
​
$("div").detach(); ->선택한div 블럭요소를 제거합니다.
$("div").empty(); ->div블럭요소만 남기고 모든 내용을 제거합니다.
​
$("img").attr("width", "500"); ->선택한 요소의 속성 / 값을 설정 및 변경합니다. (이미지경로, 넓이높이)
​
$("div").clone().appendTo("body"); ->선택한div의 복사본을 만들어 블럭요소body의 닫기 태그 앞에 삽입합니다.
​
$("div").css("color", "red"); ->선택한 요소div에 대한 하나 이상의 스타일 속성을 설정합니다.
​
$("div").toggleClass("main"); ->선택한 블럭요소div에 하나 이상의 클래스를 반복적으로 추가하거나 제거합니다.

<div class="container" onclick="move()"></div>
    <script>
      function move() {
        document.querySelector(".container").classList.add("go");
      }
    </script>
onclick 이벤트 핸들러를 사용하여 container를 클릭하면 go 클래스가 추가됨
========================================================
<style>
[title^="first"] {
     background: black;
     }
</style>
<body>
  <h1>[속성^="속성값"] 선택자를 이용한 선택</h1>
  <h2 title="first h2">적용 가능!</h2>
  <p title="first p">적용 가능!</p>
  <p title="first-p">적용 가능!</p>
  <p title="p first">적용 불가능!</p>
</body>
========================================================
<style>
[title$="first"] {
     background: black;
     }
</style>
<body>
  <h1>[속성$="속성값"] 선택자를 이용한 선택</h1>
  <h2 title="first h2">적용 불가능!</h2>
  <p title="p first">적용 가능!</p>
  <p title="p-first">적용 가능!</p>  
  <p title="first p">적용 가능!</p>
</body>
========================================================
<style>
[title*="first"] {
     background: black;
     }
</style>
<body>
  <h1>[속성*="속성값"] 선택자를 이용한 선택</h1>
  <h2 title="first h2">적용 가능!</h2>
  <p title="my-first-p">적용 가능!</p>
  <p title="p-first">적용가능!</p>
</body>
========================================================
.center {display: block; text-align: center;  margin: 0px auto; place-items: center;}
========================================================
//sass 설치

https://contents.premium.naver.com/codetree/funcoding/contents/211208204251333Km
========================================================
https://tailwindcss.com/docs/container
========================================================
//테일윈드 컨테이너

 컨테이너를 기본적으로 중앙배치 하기위해서는 js파일에 옵션 설정 해줘야함.
구성파일의 섹션에서 center옵션을 true로 theme.container설정하십시오.

tailwind.config.js
module.exports = {
  theme: {
    container: {
      center: true,
    },
  },
}

//컨테이너 좌우 x축에 패딩값을 추가하려면 js파일에서 옵션 설정을 해야함

tailwind.config.js
module.exports = {
  theme: {
    container: {
      padding: '.75rem',
    },
  },
}
========================================================
* 테일윈드는 기본적으로 모든 전역 설정이 모바일부터 시작해서 큰화면으로 적용됨
** 'lg: ' 같은 접두사를 붙일경우 모바일 크기에서 시작한 전역설정들이 lg화면 이상일때부터는 다르게 적용됨
*** 마크업시 클래스명을 작성할때 반드시 모바일 우선으로 전역설정 후 반응형 접두사를 추가로 붙힐것
**** 유틸리티가 '언제 중지되어야 하는지'가 아니라 '언제 적용 되기 시작 해야 하는지'만 지정하면 됨.
========================================================
//grid

한줄에 3개씩 배치하겠다= grid grid-cols-3
한줄에 3개씩 배치중 2+1로 하겠다= col-span-2, col-span-1

한줄에 12개까지 배치하겠다= gird gird-cols-12
한줄에 12개씩 배치중 처음 시작점부터 마지막 시작점까지 하겠다= col-start-1 col-end-13

gird타입 row를 한개만 만들겠다= gird gird-rows-1
grid타입 row를 4개를 만들겠다= grid gird-rows-4 grid-flow-col
========================================================
//flex

1. 기본 작성 
<div class="container"> //컨테이너 역할
	<div class="flex flex-row"> //row 역할 
		<div class="basis-1/12"> //basis1/12는 col-1에 해당함
		</div>
	</div>
</div>

2. flex로 이루어진 구조에서 내용을 xy중앙에 위치시킬때는 부모요소에 flex를 써야함
<div class="flex flex-row p-3 gap-x-3 text-gray-100 text-center">
	<div class="basis-full border-2 p-2 flex items-center justify-center" style="height:500px;">
	12/12(02)
	</div>
</div>

3. flex-row 밑 basis-* 사용시에 x축의 빈공간을 채우기 위해서는 grow를 사용해야함
<div class="flex flex-row p-3 gap-x-3 text-gray-100 text-center">
   	<div class="basis-1/12 border-2 p-2">1/12(01)</div>
		<div class="grow"></div> <!--grow를 통해 공백을 대신함-->
	<div class="basis-3/12 border-2 p-2">3/12(05)</div>
  </div>

4. order-* 를 통해서 DOM트리에 불러오는 basis-*의 순서를 변경할 수 있음
<div class="container h-1000 bg-cyan-800 items-center">
  <div class=" flex flex-row p-3 gap-x-3 text-gray-100 text-center">
    <div class="basis-1/12 border-2 p-2 order-last">1/12(01)</div> //해당 basis가 두번째에 위치하게 됨
    <div class="basis-1/12 border-2 p-2">1/12(02)</div> //해당 basis가 첫번째에 위치하게 됨
</div>
</div>
========================================================
/* video 태그의 컨트롤러 설정 */
 /* 전체화면 버튼 */ video::-webkit-media-controls-fullscreen-button {} 
/* 일시정지, 재생 버튼 */ video::-webkit-media-controls-play-button {} 
/* 재생 슬라이드..? */ video::-webkit-media-controls-timeline {} 
/* 현재 진행 시간 */ video::-webkit-media-controls-current-time-display{} 
/* 전체 시간 */ video::-webkit-media-controls-time-remaining-display {} 
/* 음소거 버튼 */ video::-webkit-media-controls-mute-button {}
 /* 볼륨 조절 슬라이드 */ video::-webkit-media-controls-volume-slider {}
========================================================
//애니메이션 라이브러리 js

(1) css3-animate-it.js
(2) fullpage.js
(3) aos.js
(4) slick.min.js
(5) https://animate.style/
========================================================
//홈페이지에 이메일 전송

https://kutar37.tistory.com/entry/%EC%A0%95%EC%A0%81-HTML-form%ED%83%9C%EA%B7%B8%EC%97%90%EC%84%9C-%EB%A9%94%EC%9D%BC%EB%B3%B4%EB%82%B4%EA%B8%B0-Google-Apps-Mail

//이메일로 받은 액셀
https://docs.google.com/spreadsheets/d/1xqxp3N2ly5RrLSFhirwdixajbqKL99VpB1XyjBHbLiw/edit#gid=0

========================================================

//animate.css 스크롤에 따라 작동하게 하기

1. https://github.com/matthieua/WOW에서 파일 받아서 css랑 min.js 받기
2. <script type="text/javascript" src="js/wow.min.js"></script>
<script>
new WOW().init();
 </script>
추가
3.   <link rel="stylesheet" type="text/css" href="css/animate.css" />
or  
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" />
4. 클래스명에 wow를 추가한뒤 animate.css 클래스들을 붙혀서 추가

=========================================================

영문폰트 'Neue Montreal' 사용해볼것

=========================================================
.bg {
  width: 100%;
  height: 1000px;
  /*이미지를 화면에 가득채움*/
  background-image: url(/img/nitish-meena-99219.jpg);
  background-repeat: no-repeat;
  background-position: center center;
  /*가로세로 위치를 지정함*/
  background-size: cover;
  /*이미지가 찌그러지지 않는 한도 내에서 제일 크게 설정. 
            이미지의 가로세로비가 커버와 다르다면 이미지를 세로or가로방향으로 잘라내 빈 공간이 생기지 않도록 설정*/
  background-attachment: fixed;
  /*어태치먼트 fixed값은 해당 이미지를 밀면서 전환함
            해당 속성이 없을경우 이전 이미지가 밀리면서 전환되지않음*/
}

.bg2 {
  height: 1000px;
  background-image: url(/img/mahkeo-222765.jpg);
  background-repeat: no-repeat;
  background-position: top center;
  background-size: cover;
  background-attachment: fixed;

}

.bg3 {
  height: 1000px;
  background-image: url(/img/nitish-meena-111116.jpg);
  background-repeat: no-repeat;
  background-position: bottom center;
  background-size: cover;
  background-attachment: local;
  /*어태치먼트 local값은 이전이미지가 fixed 되어있으면 그 위로 타고 올라감(이전이미지도 local이면 일반 스크롤로보임)*/
}

====================================================
<script>
    $(window).on("scroll", function() {
      if ($(window).scrollTop() > 100) {
        $(".switch").addClass("blue");
      } else {
        $(".switch").removeClass("blue");
      }
    });
  </script>
====================================================
css선택자
꺽쇠 >는 자식 선택자(직속 자식 선택자)라고 불립니다. 
그냥 스페이스(띄어쓰기)는 하위 선택자라고 불립니다. 하위 선택자는 내 자식을 포함, 손주, 증손주, 100대, 1000대, 10000대 자손까지 무제한으로 영향을 끼칩니다.